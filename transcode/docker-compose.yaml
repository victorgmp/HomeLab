version: "3.8"
services:
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    network_mode: bridge
    environment:
      - TZ=America/Caracas
      - PUID=1000
      - PGID=1000
      # - inContainer=true
      # - ffmpegVersion=6
      # - nodeName=MyInternalNode
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=MyInternalNode
      - nodeIP=0.0.0.0
      - nodePort=8267
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
    volumes:
      - ./tdarr:/app/server
      - ./tdarr:/app/configs
      - ./tdarr:/app/logs
      - "${MEDIA}:/media"
      - /transcode_cache:/temp
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    deploy:
      resources:
        reservations:
          # devices:
          #   - driver: i915
          #     count: 1
          #     capabilities: [gpu]
          cpus: '1'
          memory: 1000M
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # # Node example
  # tdarr-node:
  #   container_name: tdarr-node
  #   image: ghcr.io/haveagitgat/tdarr_node:latest
  #   restart: unless-stopped
  #   network_mode: service:tdarr
  #   environment:
  #     - TZ=America/Caracas
  #     - PUID=1000
  #     - PGID=1000
  #     - UMASK_SET=002
  #     - nodeName=MyExternalNode
  #     - serverIP=192.168.0.123
  #     - serverPort=8266
  #     - inContainer=true
  #     - ffmpegVersion=6
  #   volumes:
  #     - /docker/tdarr/configs:/app/configs
  #     - /docker/tdarr/logs:/app/logs
  #     - /media:/media
  #     - /transcode_cache:/temp
  #   devices:
  #     - /dev/dri/renderD128:/dev/dri/renderD128
